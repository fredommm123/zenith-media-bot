from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from core.database import Database
from core.utils import format_currency, send_to_admin_chat
from core.crypto_pay import calculate_usdt_amount, send_payment
from core import config
import logging

router = Router()
db = Database(config.DATABASE_PATH)
logger = logging.getLogger(__name__)


@router.message(F.text == "üí∞ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤")
async def show_withdrawal_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ —Å –±–∞–ª–∞–Ω—Å–∞"""
    user = await db.get_user(message.from_user.id)
    if not user:
        await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start", parse_mode="HTML")
        return
    
    balance = user['balance']
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ (1$ –≤ —Ä—É–±–ª—è—Ö)
    usdt_amount = await calculate_usdt_amount(balance)
    min_usdt = 1.0
    
    if balance <= 0:
        # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –¥–ª—è —Ä–∞—Å—Å—á–µ—Ç–∞ –º–∏–Ω–∏–º—É–º–∞ –≤ —Ä—É–±–ª—è—Ö
        from core.crypto_pay import get_exchange_rate_rub_to_usdt
        rate = await get_exchange_rate_rub_to_usdt()
        min_rub = (1.0 / rate) if rate else 95.0  # –ø—Ä–∏–º–µ—Ä–Ω–æ 95 —Ä—É–±–ª–µ–π –∑–∞ 1 USDT
        
        await message.answer(
            f"üíº <b>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n"
            f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {format_currency(balance)}\n\n"
            f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞\n"
            f"–ú–∏–Ω–∏–º—É–º –¥–ª—è –≤—ã–≤–æ–¥–∞: <b>{min_rub:.2f} ‚ÇΩ</b>",
            parse_mode="HTML"
        )
        return
    
    if usdt_amount and usdt_amount < min_usdt:
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∏–Ω–∏–º—É–º –≤ —Ä—É–±–ª—è—Ö
        from core.crypto_pay import get_exchange_rate_rub_to_usdt
        rate = await get_exchange_rate_rub_to_usdt()
        min_rub = (1.0 / rate) if rate else 95.0
        
        await message.answer(
            f"üíº <b>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n"
            f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {format_currency(balance)}\n"
            f"üíµ –í USDT: ~{usdt_amount:.4f} USDT\n\n"
            f"‚ö†Ô∏è –ú–∏–Ω–∏–º—É–º –¥–ª—è –≤—ã–≤–æ–¥–∞: <b>{min_rub:.2f} ‚ÇΩ</b>\n"
            f"–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –≤–∏–¥–µ–æ –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è!",
            parse_mode="HTML"
        )
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—ã–≤–æ–¥–∞
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –í—ã–≤–µ—Å—Ç–∏ –≤–µ—Å—å –±–∞–ª–∞–Ω—Å", callback_data="withdraw_balance")]
    ])
    
    await message.answer(
        f"üíº <b>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å –±–∞–ª–∞–Ω—Å–∞</b>\n\n"
        f"üí∞ –î–æ—Å—Ç—É–ø–Ω–æ: {format_currency(balance)}\n"
        f"üíµ –í USDT: ~{usdt_amount:.4f} USDT\n\n"
        f"‚úÖ –ú–∏–Ω–∏–º—É–º 1 USDT - –º–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å!\n"
        f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤—ã–≤–æ–¥–∞:",
        reply_markup=keyboard,
        parse_mode="HTML"
    )


@router.callback_query(F.data == "withdraw_balance")
async def process_balance_withdrawal(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã–≤–æ–¥ –±–∞–ª–∞–Ω—Å–∞"""
    user = await db.get_user(callback.from_user.id)
    if not user:
        await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!", show_alert=True)
        return
    
    balance = user['balance']
    
    if balance <= 0:
        await callback.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", show_alert=True)
        return
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ USDT
    usdt_amount = await calculate_usdt_amount(balance)
    
    if not usdt_amount or usdt_amount < 1.0:
        await callback.answer("‚ùå –ú–∏–Ω–∏–º—É–º 1 USDT –¥–ª—è –≤—ã–≤–æ–¥–∞!", show_alert=True)
        return
    
    await callback.message.edit_text(
        f"‚è≥ <b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞...</b>\n\n"
        f"üí∞ –°—É–º–º–∞: {format_currency(balance)}\n"
        f"üíµ –í USDT: ~{usdt_amount:.4f} USDT",
        parse_mode="HTML"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º USDT —á–µ—Ä–µ–∑ Crypto Pay
    import uuid
    spend_id = f"balance_{callback.from_user.id}_{uuid.uuid4().hex[:8]}"
    
    result = await send_payment(
        user_id=callback.from_user.id,
        username=user.get('username', 'unknown'),
        spend_id=spend_id,
        amount_rub=balance,
        comment="–í—ã–≤–æ–¥ —Å –±–∞–ª–∞–Ω—Å–∞"
    )
    
    if result['success']:
        # –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞
        await db.update_balance(callback.from_user.id, -balance)
        
        await callback.message.edit_text(
            f"‚úÖ <b>–í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!</b>\n\n"
            f"üí∞ –°—É–º–º–∞: {format_currency(balance)}\n"
            f"üíµ –ü–æ–ª—É—á–µ–Ω–æ: ~{usdt_amount:.4f} USDT\n\n"
            f"üíº –î–µ–Ω—å–≥–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à @CryptoBot –∞–∫–∫–∞—É–Ω—Ç.\n"
            f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –≤ –±–æ—Ç–µ!",
            parse_mode="HTML"
        )
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
        await send_to_admin_chat(
            f"üí∏ <b>–í—ã–≤–æ–¥ —Å –±–∞–ª–∞–Ω—Å–∞</b>\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['full_name']} (@{user.get('username', '–Ω–µ—Ç')})\n"
            f"üÜî ID: {callback.from_user.id}\n"
            f"üí∞ –°—É–º–º–∞: {format_currency(balance)}\n"
            f"üíµ USDT: ~{usdt_amount:.4f}\n"
            f"‚úÖ –£—Å–ø–µ—à–Ω–æ"
        )
        
        await callback.answer("‚úÖ –í—ã–ø–ª–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
    else:
        await callback.message.edit_text(
            f"‚ùå <b>–û—à–∏–±–∫–∞ –≤—ã–ø–ª–∞—Ç—ã</b>\n\n"
            f"‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞: {result['error']}\n\n"
            f"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
            parse_mode="HTML"
        )
        
        await callback.answer(f"‚ùå {result['error']}", show_alert=True)
