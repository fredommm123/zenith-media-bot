from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import logging
from datetime import datetime

from database import Database
from keyboards import cancel_keyboard
from youtube_video_parser import (
    validate_youtube_video_url,
    parse_youtube_video,
    extract_video_id,
    is_video_fresh
)
import config

logger = logging.getLogger(__name__)

router = Router()
db = Database(config.DATABASE_PATH)


class YouTubeVideoStates(StatesGroup):
    waiting_for_video_url = State()


def create_progress_bar(percent: int) -> str:
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –≤–∏–∑—É–∞–ª—å–Ω–æ"""
    filled = int(percent / 10)
    empty = 10 - filled
    return f"{'üü©' * filled}{'‚¨ú' * empty} {percent}%"


@router.callback_query(F.data == "submit_youtube_video")
async def start_youtube_video_submission(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∞—á–∏ YouTube –≤–∏–¥–µ–æ"""
    user_id = callback.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π YouTube –∫–∞–Ω–∞–ª
    youtube = await db.get_user_youtube(user_id)
    
    if not youtube:
        await callback.answer(
            "‚ùå –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≤—è–∂–∏—Ç–µ YouTube –∫–∞–Ω–∞–ª –≤ –ø—Ä–æ—Ñ–∏–ª–µ!",
            show_alert=True
        )
        return
    
    if not youtube['is_verified']:
        await callback.answer(
            "‚ùå –í–∞—à YouTube –∫–∞–Ω–∞–ª –µ—â–µ –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω!",
            show_alert=True
        )
        return
    
    await callback.message.edit_text(
        f"üì∫ <b>–ü–æ–¥–∞—á–∞ YouTube –≤–∏–¥–µ–æ</b>\n\n"
        f"üé¨ <b>–í–∞—à –∫–∞–Ω–∞–ª:</b> {youtube['channel_name']}\n"
        f"üÜî <b>Channel ID:</b> <code>{youtube['channel_id']}</code>\n\n"
        f"üì§ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ</b>\n\n"
        f"–ü—Ä–∏–º–µ—Ä—ã:\n"
        f"‚Ä¢ <code>https://www.youtube.com/watch?v=...</code>\n"
        f"‚Ä¢ <code>https://youtu.be/...</code>\n"
        f"‚Ä¢ <code>https://www.youtube.com/shorts/...</code>\n\n"
        f"‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>\n"
        f"‚Ä¢ –í–∏–¥–µ–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞\n"
        f"‚Ä¢ –í–∏–¥–µ–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 24 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥\n"
        f"‚Ä¢ –í–∏–¥–µ–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –ø–æ–¥–∞–≤–∞—Ç—å—Å—è —Ä–∞–Ω–µ–µ",
        reply_markup=cancel_keyboard(),
        parse_mode="HTML"
    )
    
    await state.set_state(YouTubeVideoStates.waiting_for_video_url)
    await state.update_data(youtube_channel_id=youtube['id'], youtube_channel_handle=youtube['channel_id'])
    await callback.answer()


@router.message(YouTubeVideoStates.waiting_for_video_url)
async def receive_youtube_video_url(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ"""
    url = message.text.strip()
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è URL
    if not validate_youtube_video_url(url):
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏!\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫:\n"
            "‚Ä¢ <code>https://www.youtube.com/watch?v=dQw4w9WgXcQ</code>\n"
            "‚Ä¢ <code>https://youtu.be/dQw4w9WgXcQ</code>\n"
            "‚Ä¢ <code>https://www.youtube.com/shorts/abc123</code>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
            reply_markup=cancel_keyboard(),
            parse_mode="HTML"
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–¥–∞–≤–∞–ª–æ—Å—å –ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ —Ä–∞–Ω–µ–µ
    video_exists = await db.check_youtube_video_exists(video_url=url)
    if video_exists:
        await message.answer(
            "‚ùå <b>–≠—Ç–æ –≤–∏–¥–µ–æ —É–∂–µ –±—ã–ª–æ –ø–æ–¥–∞–Ω–æ —Ä–∞–Ω–µ–µ!</b>\n\n"
            "–ö–∞–∂–¥–æ–µ –≤–∏–¥–µ–æ –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.",
            reply_markup=cancel_keyboard(),
            parse_mode="HTML"
        )
        return
    
    # –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ–æ–±—â–µ–Ω–∏–µ
    progress_msg = await message.answer(
        f"üîç <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–µ–æ</b>\n\n"
        f"{create_progress_bar(10)}\n\n"
        f"‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ...",
        parse_mode="HTML"
    )
    
    # –ü–∞—Ä—Å–∏–º –≤–∏–¥–µ–æ
    video_data = await parse_youtube_video(url)
    
    if not video_data:
        await progress_msg.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</b>\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ.\n"
            "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
            "‚Ä¢ –í–∏–¥–µ–æ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n"
            "‚Ä¢ –í–∏–¥–µ–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ\n"
            "‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å YouTube\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ:",
            reply_markup=cancel_keyboard(),
            parse_mode="HTML"
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    await progress_msg.edit_text(
        f"üîç <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–µ–æ</b>\n\n"
        f"{create_progress_bar(40)}\n\n"
        f"‚úÖ –í–∏–¥–µ–æ –Ω–∞–π–¥–µ–Ω–æ: {video_data['title']}\n"
        f"‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–∞...",
        parse_mode="HTML"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç 1 –≤–∏–¥–µ–æ –≤ 24 —á–∞—Å–∞
    can_submit, time_remaining = await db.can_submit_youtube_video(message.from_user.id)
    if not can_submit:
        await progress_msg.edit_text(
            f"‚è∞ <b>–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ!</b>\n\n"
            f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–∞–∫—Å–∏–º—É–º 1 YouTube –≤–∏–¥–µ–æ –≤ 24 —á–∞—Å–∞.\n\n"
            f"‚è≥ <b>–î–æ —Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏:</b> {time_remaining}\n\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!",
            reply_markup=cancel_keyboard(),
            parse_mode="HTML"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    data = await state.get_data()
    user_youtube_channel_id = data.get('youtube_channel_handle')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–¥–µ–æ —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if video_data['channel_id'] != user_youtube_channel_id:
        await progress_msg.edit_text(
            f"‚ùå <b>–í–∏–¥–µ–æ –Ω–µ —Å –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞!</b>\n\n"
            f"üì∫ <b>–ö–∞–Ω–∞–ª –≤–∏–¥–µ–æ:</b> {video_data['channel_name']}\n"
            f"üÜî <b>ID –∫–∞–Ω–∞–ª–∞:</b> <code>{video_data['channel_id']}</code>\n\n"
            f"üîó <b>–í–∞—à –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª:</b> <code>{user_youtube_channel_id}</code>\n\n"
            f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ —Å–æ —Å–≤–æ–µ–≥–æ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞!",
            reply_markup=cancel_keyboard(),
            parse_mode="HTML"
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    await progress_msg.edit_text(
        f"üîç <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–µ–æ</b>\n\n"
        f"{create_progress_bar(70)}\n\n"
        f"‚úÖ –ö–∞–Ω–∞–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω\n"
        f"‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...",
        parse_mode="HTML"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–¥–µ–æ —Å–≤–µ–∂–µ–µ (–Ω–µ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)
    if not is_video_fresh(video_data['upload_date'], hours=24):
        upload_date_str = video_data['upload_date'].strftime('%d.%m.%Y %H:%M') if video_data['upload_date'] else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        await progress_msg.edit_text(
            f"‚ùå <b>–í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–æ–µ!</b>\n\n"
            f"üìÖ <b>–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏:</b> {upload_date_str}\n\n"
            f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 24 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥.\n\n"
            f"‚è∞ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–∞—Ç—å –±–æ–ª–µ–µ —Å–≤–µ–∂–µ–µ –≤–∏–¥–µ–æ!",
            reply_markup=cancel_keyboard(),
            parse_mode="HTML"
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    await progress_msg.edit_text(
        f"üîç <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–µ–æ</b>\n\n"
        f"{create_progress_bar(90)}\n\n"
        f"‚úÖ –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç\n"
        f"‚è≥ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∏–¥–µ–æ...",
        parse_mode="HTML"
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∏–¥–µ–æ –≤ –±–∞–∑—É
    youtube_db_id = data.get('youtube_channel_id')
    video_id = await db.add_youtube_video(
        user_id=message.from_user.id,
        youtube_channel_id=youtube_db_id,
        video_url=url,
        video_id=video_data['video_id'],
        title=video_data['title'],
        author=video_data['channel_name'],
        published_at=video_data['upload_date_str'],
        views=video_data['view_count'],
        likes=video_data['like_count'],
        comments=video_data['comment_count']
    )
    
    if not video_id:
        await progress_msg.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è</b>\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∏–¥–µ–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.\n"
            "–í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–æ —É–∂–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ.",
            reply_markup=cancel_keyboard(),
            parse_mode="HTML"
        )
        return
    
    # –£—Å–ø–µ—Ö!
    await progress_msg.edit_text(
        f"‚úÖ <b>–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–Ω–æ!</b>\n\n"
        f"üé¨ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {video_data['title'][:50]}{'...' if len(video_data['title']) > 50 else ''}\n"
        f"üì∫ <b>–ö–∞–Ω–∞–ª:</b> {video_data['channel_name']}\n"
        f"üìÖ <b>–ó–∞–≥—Ä—É–∂–µ–Ω–æ:</b> {video_data['upload_date'].strftime('%d.%m.%Y %H:%M')}\n\n"
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø–æ–¥–∞—á–∏:</b>\n"
        f"üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {video_data['view_count']:,}\n"
        f"üëç –õ–∞–π–∫–∏: {video_data['like_count']:,}\n"
        f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {video_data['comment_count']:,}\n\n"
        f"‚è≥ <b>–°—Ç–∞—Ç—É—Å:</b> –û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏\n\n"
        f"–í–∏–¥–µ–æ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
        parse_mode="HTML"
    )
    
    await state.clear()
    
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç
    try:
        from utils import send_to_admin_chat
        from keyboards import video_moderation_keyboard, first_youtube_video_keyboard
        
        user = await db.get_user(message.from_user.id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞–≤–∫–∏
        user_tier = await db.get_user_tier(message.from_user.id)
        user_rate = await db.get_user_youtube_rate(message.from_user.id)
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Gold –∏ —É –Ω–µ–≥–æ —É–∂–µ –µ—Å—Ç—å —Å—Ç–∞–≤–∫–∞ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—ã–ø–ª–∞—Ç–∞
        if user_tier == 'gold' and user_rate and user_rate > 0:
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–¥–æ–±—Ä—è–µ–º –≤–∏–¥–µ–æ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–ª–∞—Ç—É
            await db.update_video_status(video_id, 'approved')
            await db.update_video_earnings(video_id, user_rate)
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–ª–∞—á–∏–≤–∞–µ–º
            from crypto_pay import send_payment, calculate_usdt_amount
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–ª–∞—Ç–µ–∂
            payment_result = await send_payment(
                user_id=message.from_user.id,
                amount_rub=user_rate,
                spend_id=f"youtube_auto_{video_id}"
            )
            
            if payment_result['success']:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await progress_msg.edit_text(
                    f"üéâ <b>–í–∏–¥–µ–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–¥–æ–±—Ä–µ–Ω–æ –∏ –æ–ø–ª–∞—á–µ–Ω–æ!</b>\n\n"
                    f"ü•á <b>–í–∞—à —Å—Ç–∞—Ç—É—Å:</b> GOLD\n\n"
                    f"üé¨ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {video_data['title'][:50]}{'...' if len(video_data['title']) > 50 else ''}\n"
                    f"üì∫ <b>–ö–∞–Ω–∞–ª:</b> {video_data['channel_name']}\n"
                    f"üìÖ <b>–ó–∞–≥—Ä—É–∂–µ–Ω–æ:</b> {video_data['upload_date'].strftime('%d.%m.%Y %H:%M')}\n\n"
                    f"üí∞ <b>–í—ã–ø–ª–∞—Ç–∞:</b> {user_rate:.2f}‚ÇΩ\n"
                    f"üíµ <b>–í USDT:</b> {payment_result['usdt_amount']:.2f}\n\n"
                    f"üí≥ <b>–í—ã–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ @CryptoBot</b>\n"
                    f"‚úÖ –°—Ä–µ–¥—Å—Ç–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à @CryptoBot –∫–æ—à–µ–ª–µ–∫!\n\n"
                    f"‚ÑπÔ∏è <i>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –Ω—É–∂–µ–Ω –∞–∫–∫–∞—É–Ω—Ç –≤ @CryptoBot.\n"
                    f"–ï—Å–ª–∏ —É –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start –±–æ—Ç—É @CryptoBot</i>",
                    parse_mode="HTML"
                )
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω-—á–∞—Ç
                admin_text = (
                    f"‚úÖ <b>YouTube –≤–∏–¥–µ–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø–ª–∞—á–µ–Ω–æ</b> (GOLD)\n\n"
                    f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user['full_name']} (@{user['username'] or '–Ω–µ—Ç'})\n"
                    f"üÜî <b>User ID:</b> <code>{message.from_user.id}</code>\n"
                    f"ü•á <b>–°—Ç–∞—Ç—É—Å:</b> GOLD\n\n"
                    f"üé¨ <b>–í–∏–¥–µ–æ:</b> {video_data['title'][:50]}{'...' if len(video_data['title']) > 50 else ''}\n"
                    f"üì∫ <b>–ö–∞–Ω–∞–ª:</b> {video_data['channel_name']}\n"
                    f"üîó <b>–°—Å—ã–ª–∫–∞:</b> {url}\n\n"
                    f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
                    f"üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {video_data['view_count']:,}\n"
                    f"üëç –õ–∞–π–∫–∏: {video_data['like_count']:,}\n"
                    f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {video_data['comment_count']:,}\n\n"
                    f"üí∞ <b>–í—ã–ø–ª–∞—Ç–∞:</b> {user_rate:.2f}‚ÇΩ\n"
                    f"üíµ <b>–í USDT:</b> {payment_result['usdt_amount']:.2f}\n"
                    f"‚úÖ <b>Transfer ID:</b> {payment_result['transfer'].transfer_id if payment_result.get('transfer') else 'N/A'}"
                )
                await send_to_admin_chat(message.bot, admin_text)
                return
            else:
                # –û—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ - —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await progress_msg.edit_text(
                    f"‚ö†Ô∏è <b>–í–∏–¥–µ–æ –æ–¥–æ–±—Ä–µ–Ω–æ, –Ω–æ –æ—à–∏–±–∫–∞ –≤—ã–ø–ª–∞—Ç—ã</b>\n\n"
                    f"üé¨ <b>–í–∏–¥–µ–æ:</b> {video_data['title'][:50]}{'...' if len(video_data['title']) > 50 else ''}\n\n"
                    f"üí∞ <b>–°—É–º–º–∞:</b> {user_rate:.2f}‚ÇΩ\n\n"
                    f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {payment_result['error']}\n\n"
                    f"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                    parse_mode="HTML"
                )
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω-—á–∞—Ç –æ–± –æ—à–∏–±–∫–µ
                admin_text = (
                    f"‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≤—ã–ø–ª–∞—Ç—ã!</b>\n\n"
                    f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user['full_name']} (@{user['username'] or '–Ω–µ—Ç'})\n"
                    f"üÜî <b>User ID:</b> <code>{message.from_user.id}</code>\n"
                    f"ü•á <b>–°—Ç–∞—Ç—É—Å:</b> GOLD\n\n"
                    f"üé¨ <b>–í–∏–¥–µ–æ:</b> {video_data['title'][:50]}{'...' if len(video_data['title']) > 50 else ''}\n"
                    f"üîó <b>–°—Å—ã–ª–∫–∞:</b> {url}\n\n"
                    f"üí∞ <b>–°—É–º–º–∞:</b> {user_rate:.2f}‚ÇΩ\n\n"
                    f"‚ùå <b>–û—à–∏–±–∫–∞ Crypto Bot:</b>\n{payment_result['error']}"
                )
                await send_to_admin_chat(message.bot, admin_text)
                return
        
        # –ï—Å–ª–∏ –Ω–µ Gold –∏–ª–∏ –Ω–µ—Ç —Å—Ç–∞–≤–∫–∏ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–æ–º
        is_first_video = await db.check_first_youtube_video(message.from_user.id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —É–∂–µ –æ–¥–æ–±—Ä–µ–Ω–æ —Ö–æ—Ç—å –æ–¥–Ω–æ –≤–∏–¥–µ–æ
        video_with_earnings = await db.get_video_with_details(video_id)
        has_previous_approved = video_with_earnings and video_with_earnings.get('earnings', 0) > 0
        
        if is_first_video or not has_previous_approved:
            # –ü–µ—Ä–≤–æ–µ –≤–∏–¥–µ–æ - –∞–¥–º–∏–Ω –¥–æ–ª–∂–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–ª–∞—Ç—É
            admin_text = (
                f"üÜï <b>–ü–ï–†–í–û–ï YouTube –≤–∏–¥–µ–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É</b> ‚≠êÔ∏è\n\n"
                f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user['full_name']} (@{user['username'] or '–Ω–µ—Ç'})\n"
                f"üÜî <b>User ID:</b> <code>{message.from_user.id}</code>\n\n"
                f"üé¨ <b>–í–∏–¥–µ–æ:</b> {video_data['title'][:50]}{'...' if len(video_data['title']) > 50 else ''}\n"
                f"üì∫ <b>–ö–∞–Ω–∞–ª:</b> {video_data['channel_name']}\n"
                f"üîó <b>–°—Å—ã–ª–∫–∞:</b> {url}\n\n"
                f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
                f"üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {video_data['view_count']:,}\n"
                f"üëç –õ–∞–π–∫–∏: {video_data['like_count']:,}\n"
                f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {video_data['comment_count']:,}\n\n"
                f"üí∞ <b>–í—ã–ø–ª–∞—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!</b>\n"
                f"–ù–∞–∂–º–∏ '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–ª–∞—Ç—É' —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å —Å—É–º–º—É –∑–∞ —ç—Ç–æ –≤–∏–¥–µ–æ."
            )
            keyboard = first_youtube_video_keyboard(video_id)
        else:
            # –û–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ
            admin_text = (
                f"üÜï <b>–ù–æ–≤–æ–µ YouTube –≤–∏–¥–µ–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É</b>\n\n"
                f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user['full_name']} (@{user['username'] or '–Ω–µ—Ç'})\n"
                f"üÜî <b>User ID:</b> <code>{message.from_user.id}</code>\n\n"
                f"üé¨ <b>–í–∏–¥–µ–æ:</b> {video_data['title'][:50]}{'...' if len(video_data['title']) > 50 else ''}\n"
                f"üì∫ <b>–ö–∞–Ω–∞–ª:</b> {video_data['channel_name']}\n"
                f"üîó <b>–°—Å—ã–ª–∫–∞:</b> {url}\n\n"
                f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
                f"üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {video_data['view_count']:,}\n"
                f"üëç –õ–∞–π–∫–∏: {video_data['like_count']:,}\n"
                f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {video_data['comment_count']:,}"
            )
            keyboard = video_moderation_keyboard(video_id)
        
        await send_to_admin_chat(
            message.bot,
            admin_text,
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω-—á–∞—Ç: {e}")


@router.callback_query(F.data == "cancel")
async def cancel_video_submission(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–∞—á—É –≤–∏–¥–µ–æ"""
    await state.clear()
    await callback.message.edit_text(
        "‚ùå –ü–æ–¥–∞—á–∞ –≤–∏–¥–µ–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.",
        parse_mode="HTML"
    )
    await callback.answer()
