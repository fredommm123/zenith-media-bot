#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è –Ω–∞ VDS
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python deploy.py
"""

import json
import subprocess
import sys
from datetime import datetime

try:
    import paramiko
except ImportError:
    print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å paramiko: pip install paramiko")
    sys.exit(1)


def load_config():
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–µ–ø–ª–æ—è"""
    with open("deploy_config.json", "r", encoding="utf-8") as f:
        return json.load(f)


def git_commit_and_push():
    """–ö–æ–º–º–∏—Ç –∏ push –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("üì¶ –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
    try:
        subprocess.run(["git", "add", "."], check=True)
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        subprocess.run(
            ["git", "commit", "-m", f"Auto deploy: {timestamp}"],
            check=False  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
        )
        
        print("üì§ Push –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π...")
        subprocess.run(["git", "push", "origin", "main"], check=True)
        print("‚úÖ Git push –∑–∞–≤–µ—Ä—à–µ–Ω")
    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è Git –æ–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π: {e}")


def deploy_to_vds(config):
    """–î–µ–ø–ª–æ–π –Ω–∞ VDS —á–µ—Ä–µ–∑ SSH"""
    print(f"üîß –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VDS {config['vds_host']}...")
    
    # –°–æ–∑–¥–∞–µ–º SSH –∫–ª–∏–µ–Ω—Ç
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
        client.connect(
            hostname=config["vds_host"],
            username=config["vds_user"],
            password=config["vds_password"],
            timeout=30
        )
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        commands = f"""
        cd {config['remote_path']} && \
        git pull origin main && \
        source venv/bin/activate && \
        pip install -r requirements.txt && \
        sudo systemctl restart {config['service_name']} && \
        sudo systemctl status {config['service_name']} --no-pager
        """
        
        print("üöÄ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...")
        stdin, stdout, stderr = client.exec_command(commands)
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        output = stdout.read().decode('utf-8')
        errors = stderr.read().decode('utf-8')
        
        if output:
            print("üìã –í—ã–≤–æ–¥:")
            print(output)
        
        if errors and "warning" not in errors.lower():
            print("‚ö†Ô∏è –û—à–∏–±–∫–∏:")
            print(errors)
        
        print("‚úÖ –ö–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
    except paramiko.AuthenticationException:
        print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.")
        sys.exit(1)
    except paramiko.SSHException as e:
        print(f"‚ùå SSH –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)
    finally:
        client.close()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –Ω–∞ VDS...\n")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        config = load_config()
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª deploy_config.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        sys.exit(1)
    except json.JSONDecodeError:
        print("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è deploy_config.json!")
        sys.exit(1)
    
    # Git –æ–ø–µ—Ä–∞—Ü–∏–∏
    git_commit_and_push()
    
    print()
    
    # –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    deploy_to_vds(config)
    
    print("\n‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    main()
